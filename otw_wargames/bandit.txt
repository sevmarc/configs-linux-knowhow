SSH login format:
bandit<X> -> bandit<X+1>
    ssh -p 2220 -l bandit<X+1> bandit.labs.overthewire.org
    pass


Notes:
bandit0:
ssh -p 2220 -l bandit0 bandit.labs.overthewire.org

bandit1:
ls
cat readme
boJ9jbbUNNfktd78OOpsqOltutMc3MY1
exit

bandit2:
google: "dashed filename" -> need full location
cat ./-
CV1DtqXWVFXTvM2F0k09SHz0YwRINYA9

bandit3:
google "spaces in filenames" -> https://askubuntu.com/questions/516772/how-to-access-files-directories-with-spaces-in-the-name

cat spaces\ in\ this\ filename
UmHadQclWmgdLOKQ3YNgjWxGoRMb5luK

bandit4:
cd inhere
cat .hidden
pIwrPrtPN36QITSp3EQaw936yaFoFgAB

bandit5:
cd inhere
file <filename> -> many data, 1 ASCII text file -> pass
koReBOKuIDDepwhWk7jZC0RTdopnAYKh


bandit6:
The password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:

- human-readable
- 1033 bytes in size
- not executable
--------------
find ./inhere/ -type f -size 1033c -exec ls {} \;
looking inside folder 'inhere', for file with size 1033 bytes, and listing results
As units you can use:
    b - for 512-byte blocks (this is the default if no suffix is used)
    c - for bytes
    w - for two-byte words
    k - for Kilobytes (units of 1024 bytes)
    M - for Megabytes (units of 1048576 bytes)
    G - for Gigabytes (units of 1073741824 bytes)

cat ./inhere/maybehere07/.file2
DXjZPULLxYr17uwoI01bNLQbtFemEgo7


bandit7:
- owned by user bandit7
- owned by group bandit6
- 33 bytes in size

find / -user bandit7 -group bandit6 -type f -size 33c 2>/dev/null
    2>/dev/null = errors supressed ('Permission denied')
cat /var/lib/dpkg/info/bandit7.password
HKBPTKQnIay4Fw76bEy8PVxKEDQRKTzs


bandit8:
- The password for the next level is stored in the file data.txt next to the word 'millionth'
Commands you may need to solve this level
grep, sort, uniq, strings, base64, tr, tar, gzip, bzip2, xxd

grep "millionth" data.txt
cvX2JJa4CFALtqS87jk27qwqGhBM9plV


bandit9:
The password for the next level is stored in the file data.txt and is the only line of text that occurs only once

hint: https://ryanstutorials.net/linuxtutorial/piping.php
uniq: when fed a text file or STDIN, outputs the text with adjacent identical lines collapsed to one, unique line of text

"Piping the output into sort organises the output into alphabetical/numerical order. This is a requirement because uniq only matches on repeated lines"

sort data.txt | uniq -c | grep "1 " -> 1 UsvVyFSfZZWbi6wgC7dAFyFuR6jQQUhR


bandit10:
The password for the next level is stored in the file data.txt in one of the few human-readable strings, preceded by several ‘=’ characters.

strings data.txt | grep "===" ->
========== the*2i"4
========== password
Z)========== is
&========== truKLdjsbJ5g7yyJ2X2R0o3a5HQJFuLk


bandit11:
The password for the next level is stored in the file data.txt, which contains base64 encoded data

file data.txt -> data.txt: ASCII text
cat data.txt -> VGhlIHBhc3N3b3JkIGlzIElGdWt3S0dzRlc4TU9xM0lSRnFyeEUxaHhUTkViVVBSCg==
base64 -d data.txt -> The password is IFukwKGsFW8MOq3IRFqrxE1hxTNEbUPR


bandit12:
The password for the next level is stored in the file data.txt, where all lowercase (a-z) and uppercase (A-Z) letters have been rotated by 13 positions.
using cybersecurity/cryptography/cryptoanalysis tool:
Gur cnffjbeq vf 5Gr8L4qetPEsPk8htqjhRK8XSP6x2RHh
The password is 5Te8Y4drgCRfCx8ugdwuEX8KFC6k2EUu


bandit13:
The password for the next level is stored in the file data.txt, which is a hexdump of a file that has been repeatedly compressed. For this level it may be useful to create a directory under /tmp in which you can work using mkdir. For example: mkdir /tmp/myname123. Then copy the datafile using cp, and rename it using mv (read the manpages!)
help: https://en.wikipedia.org/wiki/Hex_dump

renaming tp hex (hexdump)
    mv data.txt data.hex 
return original text from hexdump
    xxd -r data.hex data.txt
    inspection: file data.txt -> 
    data.txt: gzip compressed data, was "data2.bin", last modified: Thu May  7 18:14:30 2020, max compression, from Unix
decompress
    gzip -d data.txt
    file data -> data: bzip2 compressed data, block size = 900k
    mv data.gz data.bz2
decompress (second layer)
    bzip2 -d data.bz2
    inspection: file data -> data: gzip compressed data, was "data4.bin", last modified: Thu May  7 18:14:30 2020, max compression, from Unix
decompress (third layer)
    mv data data.gz
    gzip -d data.gz
    inspection: file data ->   data: POSIX tar archive (GNU)
decompress (fourth layer)
    mv data data.tar.gz
    tar -xf data.tar.gz
    inspection: file data5.bin -> POSIX tar archive (GNU)
decompress (fifth layer)    
    mv data5.bin data5.tar.gz
    tar -xf data5.tar.gz
    inspection: file data6.bin -> data6.bin: bzip2 compressed data, block size = 900k
decompress (sixth layer)
    mv data6.bin data6.bz2
    bzip2 -d data6.bz2 -> data6
    inspection: file data6 -> data6: POSIX tar archive (GNU)
decompress (seventh layer)
    mv data6 data7.tar.gz
    tar -xf data7.tar.gz -> data8.bin
    inspection: file data8.bin -> gzip compressed data, was "data9.bin", last modified: Thu May  7 18:14:30 2020, max compression, from Unix
decompress (eigth layer)
    mv data8.bin data9.gz
    inspection: file data9 -> data9: ASCII text
cat data9 -> 
The password is 8ZjyCRiBWFYkneahHwxCv3wb2a1ORpYL


bandit14:
The password for the next level is stored in /etc/bandit_pass/bandit14 and can only be read by user bandit14. For this level, you don’t get the next password, but you get a private SSH key that can be used to log into the next level. Note: localhost is a hostname that refers to the machine you are working on

hint: https://help.ubuntu.com/community/SSH/OpenSSH/Keys

ssh bandit14@localhost -i sshkey.private
cat /etc/bandit_pass/bandit14
4wcYUJFw0k0XLShlDzztnTBHiqxU3b3e


bandit15:
The password for the next level can be retrieved by submitting the password of the current level to port 30000 on localhost.

hint: ssh, telnet, nc, openssl, s_client, nmap

nc = netcat (TCP, UDP, or UNIX-domain sockets)

echo "4wcYUJFw0k0XLShlDzztnTBHiqxU3b3e" | nc localhost 30000
Correct!
BfMYroe26WYalil77FoDi9qh59eK5xNr


bandit16:
The password for the next level can be retrieved by submitting the password of the current level to port 30001 on localhost using SSL encryption.

Helpful note: Getting “HEARTBEATING” and “Read R BLOCK”? Use -ign_eof and read the “CONNECTED COMMANDS” section in the manpage. Next to ‘R’ and ‘Q’, the ‘B’ command also works in this version of that command…
tips: ssh, telnet, nc, openssl, s_client, nmap

hints:
https://en.wikipedia.org/wiki/Transport_Layer_Security#SSL_1.0,_2.0,_and_3.0
https://www.feistyduck.com/library/openssl-cookbook/online/ch-testing-with-openssl.html

echo "BfMYroe26WYalil77FoDi9qh59eK5xNr" | openssl s_client -connect localhost:30001 -ign_eof
cluFn7wTiGryunymYOu4RcffSxQluehd


bandit17:
The credentials for the next level can be retrieved by submitting the password of the current level to a port on localhost in the range 31000 to 32000. First find out which of these ports have a server listening on them. Then find out which of those speak SSL and which don’t. There is only 1 server that will give the next credentials, the others will simply send back to you whatever you send to it.

hint: https://en.wikipedia.org/wiki/Port_scanner
tool: cybersecurity/portscanner python module

    Starting Nmap 7.40 ( https://nmap.org ) at 2021-09-21 13:11 CEST
    Nmap scan report for localhost (127.0.0.1)
    Host is up (0.00032s latency).
    Not shown: 996 closed ports
    PORT      STATE SERVICE     VERSION
    31046/tcp open  echo
    31518/tcp open  ssl/echo
    | ssl-cert: Subject: commonName=localhost
    | Subject Alternative Name: DNS:localhost
    | Not valid before: 2021-08-05T21:23:01
    |_Not valid after:  2022-08-05T21:23:01
    |_ssl-date: TLS randomness does not represent time
    31691/tcp open  echo
    31790/tcp open  ssl/unknown
    | fingerprint-strings: 
    |   FourOhFourRequest, GenericLines, GetRequest, HTTPOptions, Help, Kerberos, LDAPSearchReq, LPDString, RTSPRequest, SIPOptions, SSLSessionReq, TLSSessionReq: 
    |_    Wrong! Please enter the correct current password
    | ssl-cert: Subject: commonName=localhost
    | Subject Alternative Name: DNS:localhost
    | Not valid before: 2021-08-05T21:23:01
    |_Not valid after:  2022-08-05T21:23:01
    |_ssl-date: TLS randomness does not represent time
    31960/tcp open  echo
    1 service unrecognized despite returning data. If you know the service/version, please submit the following fingerprint at https://nmap.org/cgi-bin/submit.cgi?new-service :
    SF-Port31790-TCP:V=7.40%T=SSL%I=7%D=9/21%Time=6149BE09%P=x86_64-pc-linux-g
    SF:nu%r(GenericLines,31,"Wrong!\x20Please\x20enter\x20the\x20correct\x20cu
    SF:rrent\x20password\n")%r(GetRequest,31,"Wrong!\x20Please\x20enter\x20the
    SF:\x20correct\x20current\x20password\n")%r(HTTPOptions,31,"Wrong!\x20Plea
    SF:se\x20enter\x20the\x20correct\x20current\x20password\n")%r(RTSPRequest,
    SF:31,"Wrong!\x20Please\x20enter\x20the\x20correct\x20current\x20password\
    SF:n")%r(Help,31,"Wrong!\x20Please\x20enter\x20the\x20correct\x20current\x
    SF:20password\n")%r(SSLSessionReq,31,"Wrong!\x20Please\x20enter\x20the\x20
    SF:correct\x20current\x20password\n")%r(TLSSessionReq,31,"Wrong!\x20Please
    SF:\x20enter\x20the\x20correct\x20current\x20password\n")%r(Kerberos,31,"W
    SF:rong!\x20Please\x20enter\x20the\x20correct\x20current\x20password\n")%r
    SF:(FourOhFourRequest,31,"Wrong!\x20Please\x20enter\x20the\x20correct\x20c
    SF:urrent\x20password\n")%r(LPDString,31,"Wrong!\x20Please\x20enter\x20the
    SF:\x20correct\x20current\x20password\n")%r(LDAPSearchReq,31,"Wrong!\x20Pl
    SF:ease\x20enter\x20the\x20correct\x20current\x20password\n")%r(SIPOptions
    SF:,31,"Wrong!\x20Please\x20enter\x20the\x20correct\x20current\x20password
    SF:\n");

    Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
    Nmap done: 1 IP address (1 host up) scanned in 89.75 seconds


Correct port: 31790
echo "cluFn7wTiGryunymYOu4RcffSxQluehd" | openssl s_client -connect localhost:31790 -ign_eof

-----BEGIN RSA PRIVATE KEY-----
MIIEogIBAAKCAQEAvmOkuifmMg6HL2YPIOjon6iWfbp7c3jx34YkYWqUH57SUdyJ
imZzeyGC0gtZPGujUSxiJSWI/oTqexh+cAMTSMlOJf7+BrJObArnxd9Y7YT2bRPQ
Ja6Lzb558YW3FZl87ORiO+rW4LCDCNd2lUvLE/GL2GWyuKN0K5iCd5TbtJzEkQTu
DSt2mcNn4rhAL+JFr56o4T6z8WWAW18BR6yGrMq7Q/kALHYW3OekePQAzL0VUYbW
JGTi65CxbCnzc/w4+mqQyvmzpWtMAzJTzAzQxNbkR2MBGySxDLrjg0LWN6sK7wNX
x0YVztz/zbIkPjfkU1jHS+9EbVNj+D1XFOJuaQIDAQABAoIBABagpxpM1aoLWfvD
KHcj10nqcoBc4oE11aFYQwik7xfW+24pRNuDE6SFthOar69jp5RlLwD1NhPx3iBl
J9nOM8OJ0VToum43UOS8YxF8WwhXriYGnc1sskbwpXOUDc9uX4+UESzH22P29ovd
d8WErY0gPxun8pbJLmxkAtWNhpMvfe0050vk9TL5wqbu9AlbssgTcCXkMQnPw9nC
YNN6DDP2lbcBrvgT9YCNL6C+ZKufD52yOQ9qOkwFTEQpjtF4uNtJom+asvlpmS8A
vLY9r60wYSvmZhNqBUrj7lyCtXMIu1kkd4w7F77k+DjHoAXyxcUp1DGL51sOmama
+TOWWgECgYEA8JtPxP0GRJ+IQkX262jM3dEIkza8ky5moIwUqYdsx0NxHgRRhORT
8c8hAuRBb2G82so8vUHk/fur85OEfc9TncnCY2crpoqsghifKLxrLgtT+qDpfZnx
SatLdt8GfQ85yA7hnWWJ2MxF3NaeSDm75Lsm+tBbAiyc9P2jGRNtMSkCgYEAypHd
HCctNi/FwjulhttFx/rHYKhLidZDFYeiE/v45bN4yFm8x7R/b0iE7KaszX+Exdvt
SghaTdcG0Knyw1bpJVyusavPzpaJMjdJ6tcFhVAbAjm7enCIvGCSx+X3l5SiWg0A
R57hJglezIiVjv3aGwHwvlZvtszK6zV6oXFAu0ECgYAbjo46T4hyP5tJi93V5HDi
Ttiek7xRVxUl+iU7rWkGAXFpMLFteQEsRr7PJ/lemmEY5eTDAFMLy9FL2m9oQWCg
R8VdwSk8r9FGLS+9aKcV5PI/WEKlwgXinB3OhYimtiG2Cg5JCqIZFHxD6MjEGOiu
L8ktHMPvodBwNsSBULpG0QKBgBAplTfC1HOnWiMGOU3KPwYWt0O6CdTkmJOmL8Ni
blh9elyZ9FsGxsgtRBXRsqXuz7wtsQAgLHxbdLq/ZJQ7YfzOKU4ZxEnabvXnvWkU
YOdjHdSOoKvDQNWu6ucyLRAWFuISeXw9a/9p7ftpxm0TSgyvmfLF2MIAEwyzRqaM
77pBAoGAMmjmIJdjp+Ez8duyn3ieo36yrttF5NSsJLAbxFpdlc1gvtGCWW+9Cq0b
dxviW8+TFVEBl1O4f7HVm6EpTscdDxU+bCXWkfjuRb7Dy9GOtt9JPsX8MBTakzh3
vBgsyi/sN3RqRBcGU40fOoZyfAMT8s1m/uYv52O6IgeuZ/ujbjY=
-----END RSA PRIVATE KEY-----

created bandit17.private (tmp/sm)

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@         WARNING: UNPROTECTED PRIVATE KEY FILE!          @
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
Permissions 0644 for 'bandit17.private' are too open.
It is required that your private key files are NOT accessible by others.
This private key will be ignored.
Load key "bandit17.private": bad permissions

chmod 400 sshkey.private (0b 110 010 000)

cat /etc/bandit_pass/bandit17
xLYVMN9WE5zQ5vHacb0sZEVqbrp7nBTn


bandit18:
There are 2 files in the homedirectory: passwords.old and passwords.new. The password for the next level is in passwords.new and is the only line that has been changed between passwords.old and passwords.new

NOTE: if you have solved this level and see ‘Byebye!’ when trying to log into bandit18, this is related to the next level, bandit19

Commands you may need to solve this level
cat, grep, ls, diff


diff passwords.old passwords.new
42c42
< w0Yfolrc5bwjS4qw5mq1nnQi6mF03bii
---
> kfBf3eYk5BPBRzwjqutbbfE887SVc5Yd


bandit19:
The password for the next level is stored in a file readme in the homedirectory. Unfortunately, someone has modified .bashrc to log you out when you log in with SSH.

# ~/.bash_logout: executed by bash(1) when login shell exits.

# when leaving the console clear the screen to increase privacy

if [ "$SHLVL" = 1 ]; then
    [ -x /usr/bin/clear_console ] && /usr/bin/clear_console -q
fi

solution: ssh -p 2220 -l bandit18 bandit.labs.overthewire.org "cat ~/readme"
solution2: ssh -t bandit18@bandit.labs.overthewire.org -p 2220 /bin/sh
-> $SHLVL increased, won't log us out

pass: IueksS7Ubh8G3DCwVzrTd8rAVOwq3M5x

